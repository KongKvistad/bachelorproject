// imports
@import url('https://fonts.googleapis.com/css?family=Open+Sans');
@import "vue-select/src/scss/vue-select.scss";

/** 
Set up variables:

For colors create names like: $c-primary
where c stands for color
For fonts create names like: $f-primary
where f stands for fonts
etc.

*/

//COLORS
$c-primary: #00509E;
$c-hover: #000;
$c-secondary: #A3BAD1; //NB!! Bytte til #DDE7EE etter NTNU sin designmanual? Eventuelt #79A2CE
$c-alert: #BA0909;
$c-confirm: #0CAE43;
$c-dark: #272833; //Bruk denne for all tekst l√∏pende tekst
$c-white: #fff;

//FONTS

$f-primary: 'Open sans', sans serif;

//FONT SIZES

/*
Standard px to rem
rem is relative, so will vary

10px	0.625rem
11px	0.6875rem
12px	0.75rem
13px	0.8125rem
14px	0.875rem
15px	0.9375rem
16px	1rem
17px	1.0625rem
18px	1.125rem
19px	1.1875rem
20px	1.25rem
21px	1.3125rem
22px	1.375rem
23px	1.4375rem
24px	1.5rem
25px	1.5625rem
26px	1.625rem
27px	1.6875rem
28px	1.75rem
29px	1.8125rem
30px	1.875rem
31px	1.9375rem
32px	2rem
...

More on: http://www.standardista.com/px-to-rem-conversion-if-root-font-size-is-16px/

*/

$fs-menu: 1.2rem;
$fs-h1: 2.2rem;
$fs-h2: 1.9rem;
$fs-h3: 1.7rem;
$fs-h4: 1.5rem;
$fs-h5: 1.3rem;
$fs-h6: 1.1rem;
$fs-normal: 1rem;
$fs-small: 0.8rem;

$h1-padding-top: 30px;

/* $primary: #30A0EE;
$error: #ef5777;
$success: #1abc9c;
$light: #F5F8FA;
$medium: #657786;
$dark: #34495E;
$white: #fff;
$NTNU: #00509e; */



/*GENERAL GLOBAL STYLING*/

// resets
body {
	margin: 0;
	color: $c-dark;
}

html {
	line-height: 1.15;
	-webkit-text-size-adjust: 100%;
}

* {
	font-family: $f-primary;
	box-sizing: border-box;
	transition: 0.15s;

	&:focus {
		outline: none;
	}
}

// fonts
h1,
h2,
h3,
h4,
h5,
p {
	margin: 0 0 0.5rem;
}

h1 {
	font-size: $fs-h1;
	padding-top: $h1-padding-top;
}

h2 {
	font-size: $fs-h2;
}

h3 {
	font-size: $fs-h3;
}

h4 {
	font-size: $fs-h4;
}

h5 {
	font-size: $fs-h5;
}

h6 {
	font-size: $fs-h6;
}

p {
	line-height: 1.5;
}

a {
	font-family: $f-primary;
	text-decoration: none;
	color: $c-primary !important;
	margin: 0;
	cursor: pointer;

	&:hover {
		color: lighten($c-primary, 5%);
	}
}

// globals

[v-cloak] {
	display: none;
}

.loading {
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	background: rgba($c-dark, 0.4);
	z-index: 9999;

	p {
		background: $c-white;
		width: 150px;
		text-align: center;
		margin: 40vh auto 0;
		padding: 40px 0;
		border-radius: 3px;
		box-shadow: 0 0 20px 0 rgba($c-dark, 0.5);
	}
}

.error-msg {
	margin-top: 1rem;
	text-align: center;

	p {
		color: $c-alert;
		margin: 0;
	}
}

.button {
	background: $c-primary;
	border: 0;
	outline: 0;
	color: $c-white;
	padding: 0.8rem 1rem;
	min-width: 150px;
	font-size: $fs-normal;
	border-radius: 3px;
	cursor: pointer;

	&:hover {
		background: lighten($c-primary, 5%);
	}

	&:disabled {
		opacity: 0.5;

		&:hover {
			background: $c-primary;
		}
	}
}

.text-center {
	text-align: center;
}


.clear {
	clear: both;
}

// transitions

.fade-enter-active {
	transition: opacity 1s;
}

.fade-leave-active {
	transition: opacity 0s;
}

.fade-enter,
.fade-leave-to {
	opacity: 0;
}


.list-enter-active,
.list-leave-active,
.list-move {
  transition: 500ms cubic-bezier(0.59, 0.12, 0.34, 0.95);
  transition-property: opacity, transform;
}

.list-enter {
  opacity: 0;
  transform: translateX(50px) scaleY(0.5);
}

.list-enter-to {
  opacity: 1;
  transform: translateX(0) scaleY(1);
}

.list-leave-active {
  position: absolute;
}

.list-leave-to {
  opacity: 0;
  transform: scaleY(0);
  transform-origin: center top;
}